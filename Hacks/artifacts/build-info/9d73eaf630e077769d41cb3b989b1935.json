{
	"id": "9d73eaf630e077769d41cb3b989b1935",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Hacks/BlockTimestampManipulation.sol": {
				"content": "// Vulnerability\r\n// block.timestamp can be manipulated by miners with the following constraints\r\n\r\n// it cannot be stamped with an earlier time than its parent\r\n// it cannot be too far in the future\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\n\r\n/*\r\nRoulette is a game where you can win all of the Ether in the contract\r\nif you can submit a transaction at a specific timing.\r\nA player needs to send 10 Ether and wins if the block.timestamp % 15 == 0.\r\n*/\r\n\r\n/*\r\n1. Deploy Roulette with 10 Ether\r\n2. Eve runs a powerful miner that can manipulate the block timestamp.\r\n3. Eve sets the block.timestamp to a number in the future that is divisible by\r\n   15 and finds the target block hash.\r\n4. Eve's block is successfully included into the chain, Eve wins the\r\n   Roulette game.\r\n*/\r\n\r\ncontract Roulette {\r\n    uint256 public pastBlockTime;\r\n\r\n    constructor() payable {}\r\n\r\n    function spin() external payable {\r\n        require(msg.value == 10 ether); // must send 10 ether to play\r\n        require(block.timestamp != pastBlockTime); // only 1 transaction per block\r\n\r\n        pastBlockTime = block.timestamp;\r\n\r\n        if(block.timestamp % 15 == 0) {\r\n            (bool sent,) = msg.sender.call{value: address(this).balance}(\"\");\r\n            require(sent, \"Failed to send ether\");\r\n        }\r\n    }\r\n}\r\n\r\n// Preventative Techniques\r\n// Don't use block.timestamp for a source of entropy and random number"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Hacks/BlockTimestampManipulation.sol": {
				"Roulette": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "pastBlockTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "spin",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Hacks/BlockTimestampManipulation.sol\":800:1322  contract Roulette {... */\n  mstore(0x40, 0x80)\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Hacks/BlockTimestampManipulation.sol\":800:1322  contract Roulette {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x58d02b09\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf0acd7d5\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Hacks/BlockTimestampManipulation.sol\":825:853  uint256 public pastBlockTime */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_4:\n      pop\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hacks/BlockTimestampManipulation.sol\":894:1319  function spin() external payable {... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"Hacks/BlockTimestampManipulation.sol\":825:853  uint256 public pastBlockTime */\n    tag_6:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"Hacks/BlockTimestampManipulation.sol\":894:1319  function spin() external payable {... */\n    tag_10:\n        /* \"Hacks/BlockTimestampManipulation.sol\":959:967  10 ether */\n      0x8ac7230489e80000\n        /* \"Hacks/BlockTimestampManipulation.sol\":946:955  msg.value */\n      callvalue\n        /* \"Hacks/BlockTimestampManipulation.sol\":946:967  msg.value == 10 ether */\n      eq\n        /* \"Hacks/BlockTimestampManipulation.sol\":938:968  require(msg.value == 10 ether) */\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n        /* \"Hacks/BlockTimestampManipulation.sol\":1036:1049  pastBlockTime */\n      sload(0x00)\n        /* \"Hacks/BlockTimestampManipulation.sol\":1017:1032  block.timestamp */\n      timestamp\n        /* \"Hacks/BlockTimestampManipulation.sol\":1017:1049  block.timestamp != pastBlockTime */\n      sub\n        /* \"Hacks/BlockTimestampManipulation.sol\":1009:1050  require(block.timestamp != pastBlockTime) */\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n        /* \"Hacks/BlockTimestampManipulation.sol\":1111:1126  block.timestamp */\n      timestamp\n        /* \"Hacks/BlockTimestampManipulation.sol\":1095:1108  pastBlockTime */\n      0x00\n        /* \"Hacks/BlockTimestampManipulation.sol\":1095:1126  pastBlockTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Hacks/BlockTimestampManipulation.sol\":1166:1167  0 */\n      0x00\n        /* \"Hacks/BlockTimestampManipulation.sol\":1160:1162  15 */\n      0x0f\n        /* \"Hacks/BlockTimestampManipulation.sol\":1142:1157  block.timestamp */\n      timestamp\n        /* \"Hacks/BlockTimestampManipulation.sol\":1142:1162  block.timestamp % 15 */\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"Hacks/BlockTimestampManipulation.sol\":1142:1167  block.timestamp % 15 == 0 */\n      sub\n        /* \"Hacks/BlockTimestampManipulation.sol\":1139:1312  if(block.timestamp % 15 == 0) {... */\n      tag_16\n      jumpi\n        /* \"Hacks/BlockTimestampManipulation.sol\":1185:1194  bool sent */\n      0x00\n        /* \"Hacks/BlockTimestampManipulation.sol\":1199:1209  msg.sender */\n      caller\n        /* \"Hacks/BlockTimestampManipulation.sol\":1199:1214  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hacks/BlockTimestampManipulation.sol\":1222:1243  address(this).balance */\n      selfbalance\n        /* \"Hacks/BlockTimestampManipulation.sol\":1199:1248  msg.sender.call{value: address(this).balance}(\"\") */\n      mload(0x40)\n      tag_17\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_21\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_20)\n    tag_21:\n      0x60\n      swap2\n      pop\n    tag_20:\n      pop\n        /* \"Hacks/BlockTimestampManipulation.sol\":1184:1248  (bool sent,) = msg.sender.call{value: address(this).balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"Hacks/BlockTimestampManipulation.sol\":1271:1275  sent */\n      dup1\n        /* \"Hacks/BlockTimestampManipulation.sol\":1263:1300  require(sent, \"Failed to send ether\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"Hacks/BlockTimestampManipulation.sol\":1169:1312  {... */\n      pop\n        /* \"Hacks/BlockTimestampManipulation.sol\":1139:1312  if(block.timestamp % 15 == 0) {... */\n    tag_16:\n        /* \"Hacks/BlockTimestampManipulation.sol\":894:1319  function spin() external payable {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_25:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_26:\n        /* \"#utility.yul\":177:201   */\n      tag_37\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_25\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_8:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_39\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_26\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:622   */\n    tag_27:\n        /* \"#utility.yul\":490:567   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":487:488   */\n      0x00\n        /* \"#utility.yul\":480:568   */\n      mstore\n        /* \"#utility.yul\":587:591   */\n      0x12\n        /* \"#utility.yul\":584:585   */\n      0x04\n        /* \"#utility.yul\":577:592   */\n      mstore\n        /* \"#utility.yul\":611:615   */\n      0x24\n        /* \"#utility.yul\":608:609   */\n      0x00\n        /* \"#utility.yul\":601:616   */\n      revert\n        /* \"#utility.yul\":628:804   */\n    tag_15:\n        /* \"#utility.yul\":660:661   */\n      0x00\n        /* \"#utility.yul\":677:697   */\n      tag_42\n        /* \"#utility.yul\":695:696   */\n      dup3\n        /* \"#utility.yul\":677:697   */\n      tag_25\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":672:697   */\n      swap2\n      pop\n        /* \"#utility.yul\":711:731   */\n      tag_43\n        /* \"#utility.yul\":729:730   */\n      dup4\n        /* \"#utility.yul\":711:731   */\n      tag_25\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":706:731   */\n      swap3\n      pop\n        /* \"#utility.yul\":750:751   */\n      dup3\n        /* \"#utility.yul\":740:775   */\n      tag_44\n      jumpi\n        /* \"#utility.yul\":755:773   */\n      tag_45\n      tag_27\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":740:775   */\n    tag_44:\n        /* \"#utility.yul\":796:797   */\n      dup3\n        /* \"#utility.yul\":793:794   */\n      dup3\n        /* \"#utility.yul\":789:798   */\n      mod\n        /* \"#utility.yul\":784:798   */\n      swap1\n      pop\n        /* \"#utility.yul\":628:804   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":810:957   */\n    tag_28:\n        /* \"#utility.yul\":911:922   */\n      0x00\n        /* \"#utility.yul\":948:951   */\n      dup2\n        /* \"#utility.yul\":933:951   */\n      swap1\n      pop\n        /* \"#utility.yul\":810:957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":963:1077   */\n    tag_29:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1083:1481   */\n    tag_30:\n        /* \"#utility.yul\":1242:1245   */\n      0x00\n        /* \"#utility.yul\":1263:1346   */\n      tag_49\n        /* \"#utility.yul\":1344:1345   */\n      0x00\n        /* \"#utility.yul\":1339:1342   */\n      dup4\n        /* \"#utility.yul\":1263:1346   */\n      tag_28\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1256:1346   */\n      swap2\n      pop\n        /* \"#utility.yul\":1355:1448   */\n      tag_50\n        /* \"#utility.yul\":1444:1447   */\n      dup3\n        /* \"#utility.yul\":1355:1448   */\n      tag_29\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1473:1474   */\n      0x00\n        /* \"#utility.yul\":1468:1471   */\n      dup3\n        /* \"#utility.yul\":1464:1475   */\n      add\n        /* \"#utility.yul\":1457:1475   */\n      swap1\n      pop\n        /* \"#utility.yul\":1083:1481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1487:1866   */\n    tag_18:\n        /* \"#utility.yul\":1671:1674   */\n      0x00\n        /* \"#utility.yul\":1693:1840   */\n      tag_52\n        /* \"#utility.yul\":1836:1839   */\n      dup3\n        /* \"#utility.yul\":1693:1840   */\n      tag_30\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1686:1840   */\n      swap2\n      pop\n        /* \"#utility.yul\":1857:1860   */\n      dup2\n        /* \"#utility.yul\":1850:1860   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1866   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1872:2041   */\n    tag_31:\n        /* \"#utility.yul\":1956:1967   */\n      0x00\n        /* \"#utility.yul\":1990:1996   */\n      dup3\n        /* \"#utility.yul\":1985:1988   */\n      dup3\n        /* \"#utility.yul\":1978:1997   */\n      mstore\n        /* \"#utility.yul\":2030:2034   */\n      0x20\n        /* \"#utility.yul\":2025:2028   */\n      dup3\n        /* \"#utility.yul\":2021:2035   */\n      add\n        /* \"#utility.yul\":2006:2035   */\n      swap1\n      pop\n        /* \"#utility.yul\":1872:2041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2047:2217   */\n    tag_32:\n        /* \"#utility.yul\":2187:2209   */\n      0x4661696c656420746f2073656e64206574686572000000000000000000000000\n        /* \"#utility.yul\":2183:2184   */\n      0x00\n        /* \"#utility.yul\":2175:2181   */\n      dup3\n        /* \"#utility.yul\":2171:2185   */\n      add\n        /* \"#utility.yul\":2164:2210   */\n      mstore\n        /* \"#utility.yul\":2047:2217   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2223:2589   */\n    tag_33:\n        /* \"#utility.yul\":2365:2368   */\n      0x00\n        /* \"#utility.yul\":2386:2453   */\n      tag_56\n        /* \"#utility.yul\":2450:2452   */\n      0x14\n        /* \"#utility.yul\":2445:2448   */\n      dup4\n        /* \"#utility.yul\":2386:2453   */\n      tag_31\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":2379:2453   */\n      swap2\n      pop\n        /* \"#utility.yul\":2462:2555   */\n      tag_57\n        /* \"#utility.yul\":2551:2554   */\n      dup3\n        /* \"#utility.yul\":2462:2555   */\n      tag_32\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2580:2582   */\n      0x20\n        /* \"#utility.yul\":2575:2578   */\n      dup3\n        /* \"#utility.yul\":2571:2583   */\n      add\n        /* \"#utility.yul\":2564:2583   */\n      swap1\n      pop\n        /* \"#utility.yul\":2223:2589   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2595:3014   */\n    tag_24:\n        /* \"#utility.yul\":2761:2765   */\n      0x00\n        /* \"#utility.yul\":2799:2801   */\n      0x20\n        /* \"#utility.yul\":2788:2797   */\n      dup3\n        /* \"#utility.yul\":2784:2802   */\n      add\n        /* \"#utility.yul\":2776:2802   */\n      swap1\n      pop\n        /* \"#utility.yul\":2848:2857   */\n      dup2\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2838:2858   */\n      sub\n        /* \"#utility.yul\":2834:2835   */\n      0x00\n        /* \"#utility.yul\":2823:2832   */\n      dup4\n        /* \"#utility.yul\":2819:2836   */\n      add\n        /* \"#utility.yul\":2812:2859   */\n      mstore\n        /* \"#utility.yul\":2876:3007   */\n      tag_59\n        /* \"#utility.yul\":3002:3006   */\n      dup2\n        /* \"#utility.yul\":2876:3007   */\n      tag_33\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":2868:3007   */\n      swap1\n      pop\n        /* \"#utility.yul\":2595:3014   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200d07d6274745762065e4429f1dfe1b947b36ed5db2336005e293060b8d368cb964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_7": {
									"entryPoint": null,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526102c6806100115f395ff3fe608060405260043610610028575f3560e01c806358d02b091461002c578063f0acd7d514610056575b5f80fd5b348015610037575f80fd5b50610040610060565b60405161004d9190610161565b60405180910390f35b61005e610065565b005b5f5481565b678ac7230489e800003414610078575f80fd5b5f544203610084575f80fd5b425f819055505f600f4261009891906101a7565b03610147575f3373ffffffffffffffffffffffffffffffffffffffff16476040516100c290610204565b5f6040518083038185875af1925050503d805f81146100fc576040519150601f19603f3d011682016040523d82523d5f602084013e610101565b606091505b5050905080610145576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013c90610272565b60405180910390fd5b505b565b5f819050919050565b61015b81610149565b82525050565b5f6020820190506101745f830184610152565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6101b182610149565b91506101bc83610149565b9250826101cc576101cb61017a565b5b828206905092915050565b5f81905092915050565b50565b5f6101ef5f836101d7565b91506101fa826101e1565b5f82019050919050565b5f61020e826101e4565b9150819050919050565b5f82825260208201905092915050565b7f4661696c656420746f2073656e642065746865720000000000000000000000005f82015250565b5f61025c601483610218565b915061026782610228565b602082019050919050565b5f6020820190508181035f83015261028981610250565b905091905056fea26469706673582212200d07d6274745762065e4429f1dfe1b947b36ed5db2336005e293060b8d368cb964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x2C6 DUP1 PUSH2 0x11 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x58D02B09 EQ PUSH2 0x2C JUMPI DUP1 PUSH4 0xF0ACD7D5 EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x65 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH8 0x8AC7230489E80000 CALLVALUE EQ PUSH2 0x78 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SLOAD TIMESTAMP SUB PUSH2 0x84 JUMPI PUSH0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xF TIMESTAMP PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST SUB PUSH2 0x147 JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xC2 SWAP1 PUSH2 0x204 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x101 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x145 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C SWAP1 PUSH2 0x272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B DUP2 PUSH2 0x149 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x174 PUSH0 DUP4 ADD DUP5 PUSH2 0x152 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B1 DUP3 PUSH2 0x149 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC DUP4 PUSH2 0x149 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1CC JUMPI PUSH2 0x1CB PUSH2 0x17A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF PUSH0 DUP4 PUSH2 0x1D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA DUP3 PUSH2 0x1E1 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20E DUP3 PUSH2 0x1E4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64206574686572000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25C PUSH1 0x14 DUP4 PUSH2 0x218 JUMP JUMPDEST SWAP2 POP PUSH2 0x267 DUP3 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x289 DUP2 PUSH2 0x250 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SMOD 0xD6 0x27 SELFBALANCE GASLIMIT PUSH23 0x2065E4429F1DFE1B947B36ED5DB2336005E293060B8D36 DUP13 0xB9 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "800:522:0:-:0;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@pastBlockTime_3": {
									"entryPoint": 96,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@spin_57": {
									"entryPoint": 101,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9dfe7da6fa76d39e991829d75760d7bd0a7523541cc979a3e9e59716227ab962_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9dfe7da6fa76d39e991829d75760d7bd0a7523541cc979a3e9e59716227ab962__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 378,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9dfe7da6fa76d39e991829d75760d7bd0a7523541cc979a3e9e59716227ab962": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3017:1",
										"nodeType": "YulBlock",
										"src": "0:3017:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nativeSrc": "470:152:1",
													"nodeType": "YulBlock",
													"src": "470:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "487:1:1",
																		"nodeType": "YulLiteral",
																		"src": "487:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "490:77:1",
																		"nodeType": "YulLiteral",
																		"src": "490:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "480:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:1"
																},
																"nativeSrc": "480:88:1",
																"nodeType": "YulFunctionCall",
																"src": "480:88:1"
															},
															"nativeSrc": "480:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "480:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "584:1:1",
																		"nodeType": "YulLiteral",
																		"src": "584:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "587:4:1",
																		"nodeType": "YulLiteral",
																		"src": "587:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "577:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:1"
																},
																"nativeSrc": "577:15:1",
																"nodeType": "YulFunctionCall",
																"src": "577:15:1"
															},
															"nativeSrc": "577:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "577:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "608:1:1",
																		"nodeType": "YulLiteral",
																		"src": "608:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "611:4:1",
																		"nodeType": "YulLiteral",
																		"src": "611:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:1"
																},
																"nativeSrc": "601:15:1",
																"nodeType": "YulFunctionCall",
																"src": "601:15:1"
															},
															"nativeSrc": "601:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "601:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "442:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "442:180:1"
											},
											{
												"body": {
													"nativeSrc": "662:142:1",
													"nodeType": "YulBlock",
													"src": "662:142:1",
													"statements": [
														{
															"nativeSrc": "672:25:1",
															"nodeType": "YulAssignment",
															"src": "672:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "695:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "695:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "677:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "677:17:1"
																},
																"nativeSrc": "677:20:1",
																"nodeType": "YulFunctionCall",
																"src": "677:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "672:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "672:1:1"
																}
															]
														},
														{
															"nativeSrc": "706:25:1",
															"nodeType": "YulAssignment",
															"src": "706:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "729:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "729:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "711:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "711:17:1"
																},
																"nativeSrc": "711:20:1",
																"nodeType": "YulFunctionCall",
																"src": "711:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "706:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "706:1:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "753:22:1",
																"nodeType": "YulBlock",
																"src": "753:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "755:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "755:16:1"
																			},
																			"nativeSrc": "755:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "755:18:1"
																		},
																		"nativeSrc": "755:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "755:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "750:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "750:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "743:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "743:6:1"
																},
																"nativeSrc": "743:9:1",
																"nodeType": "YulFunctionCall",
																"src": "743:9:1"
															},
															"nativeSrc": "740:35:1",
															"nodeType": "YulIf",
															"src": "740:35:1"
														},
														{
															"nativeSrc": "784:14:1",
															"nodeType": "YulAssignment",
															"src": "784:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "793:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "793:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "796:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "796:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "789:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "789:3:1"
																},
																"nativeSrc": "789:9:1",
																"nodeType": "YulFunctionCall",
																"src": "789:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "784:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "784:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "628:176:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "651:1:1",
														"nodeType": "YulTypedName",
														"src": "651:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "654:1:1",
														"nodeType": "YulTypedName",
														"src": "654:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "660:1:1",
														"nodeType": "YulTypedName",
														"src": "660:1:1",
														"type": ""
													}
												],
												"src": "628:176:1"
											},
											{
												"body": {
													"nativeSrc": "923:34:1",
													"nodeType": "YulBlock",
													"src": "923:34:1",
													"statements": [
														{
															"nativeSrc": "933:18:1",
															"nodeType": "YulAssignment",
															"src": "933:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "948:3:1",
																"nodeType": "YulIdentifier",
																"src": "948:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "933:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "933:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "810:147:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "895:3:1",
														"nodeType": "YulTypedName",
														"src": "895:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "900:6:1",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "911:11:1",
														"nodeType": "YulTypedName",
														"src": "911:11:1",
														"type": ""
													}
												],
												"src": "810:147:1"
											},
											{
												"body": {
													"nativeSrc": "1069:8:1",
													"nodeType": "YulBlock",
													"src": "1069:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "963:114:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1061:6:1",
														"nodeType": "YulTypedName",
														"src": "1061:6:1",
														"type": ""
													}
												],
												"src": "963:114:1"
											},
											{
												"body": {
													"nativeSrc": "1246:235:1",
													"nodeType": "YulBlock",
													"src": "1246:235:1",
													"statements": [
														{
															"nativeSrc": "1256:90:1",
															"nodeType": "YulAssignment",
															"src": "1256:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1339:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1339:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1344:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1344:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "1263:75:1",
																	"nodeType": "YulIdentifier",
																	"src": "1263:75:1"
																},
																"nativeSrc": "1263:83:1",
																"nodeType": "YulFunctionCall",
																"src": "1263:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1256:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1256:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1444:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1444:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "1355:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "1355:88:1"
																},
																"nativeSrc": "1355:93:1",
																"nodeType": "YulFunctionCall",
																"src": "1355:93:1"
															},
															"nativeSrc": "1355:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "1355:93:1"
														},
														{
															"nativeSrc": "1457:18:1",
															"nodeType": "YulAssignment",
															"src": "1457:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1468:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1468:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1464:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1464:3:1"
																},
																"nativeSrc": "1464:11:1",
																"nodeType": "YulFunctionCall",
																"src": "1464:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1457:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1457:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "1083:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1234:3:1",
														"nodeType": "YulTypedName",
														"src": "1234:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1242:3:1",
														"nodeType": "YulTypedName",
														"src": "1242:3:1",
														"type": ""
													}
												],
												"src": "1083:398:1"
											},
											{
												"body": {
													"nativeSrc": "1675:191:1",
													"nodeType": "YulBlock",
													"src": "1675:191:1",
													"statements": [
														{
															"nativeSrc": "1686:154:1",
															"nodeType": "YulAssignment",
															"src": "1686:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1836:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1836:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "1693:141:1",
																	"nodeType": "YulIdentifier",
																	"src": "1693:141:1"
																},
																"nativeSrc": "1693:147:1",
																"nodeType": "YulFunctionCall",
																"src": "1693:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1686:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1686:3:1"
																}
															]
														},
														{
															"nativeSrc": "1850:10:1",
															"nodeType": "YulAssignment",
															"src": "1850:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "1857:3:1",
																"nodeType": "YulIdentifier",
																"src": "1857:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1850:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1850:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1487:379:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1662:3:1",
														"nodeType": "YulTypedName",
														"src": "1662:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1671:3:1",
														"nodeType": "YulTypedName",
														"src": "1671:3:1",
														"type": ""
													}
												],
												"src": "1487:379:1"
											},
											{
												"body": {
													"nativeSrc": "1968:73:1",
													"nodeType": "YulBlock",
													"src": "1968:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1985:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1985:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1990:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1990:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1978:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1978:6:1"
																},
																"nativeSrc": "1978:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1978:19:1"
															},
															"nativeSrc": "1978:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1978:19:1"
														},
														{
															"nativeSrc": "2006:29:1",
															"nodeType": "YulAssignment",
															"src": "2006:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2025:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2025:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2030:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2030:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2021:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2021:3:1"
																},
																"nativeSrc": "2021:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2021:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2006:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "2006:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1872:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1940:3:1",
														"nodeType": "YulTypedName",
														"src": "1940:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1945:6:1",
														"nodeType": "YulTypedName",
														"src": "1945:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1956:11:1",
														"nodeType": "YulTypedName",
														"src": "1956:11:1",
														"type": ""
													}
												],
												"src": "1872:169:1"
											},
											{
												"body": {
													"nativeSrc": "2153:64:1",
													"nodeType": "YulBlock",
													"src": "2153:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2175:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2175:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2183:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2183:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2171:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2171:3:1"
																		},
																		"nativeSrc": "2171:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2171:14:1"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e64206574686572",
																		"kind": "string",
																		"nativeSrc": "2187:22:1",
																		"nodeType": "YulLiteral",
																		"src": "2187:22:1",
																		"type": "",
																		"value": "Failed to send ether"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2164:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:1"
																},
																"nativeSrc": "2164:46:1",
																"nodeType": "YulFunctionCall",
																"src": "2164:46:1"
															},
															"nativeSrc": "2164:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "2164:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_9dfe7da6fa76d39e991829d75760d7bd0a7523541cc979a3e9e59716227ab962",
												"nativeSrc": "2047:170:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2145:6:1",
														"nodeType": "YulTypedName",
														"src": "2145:6:1",
														"type": ""
													}
												],
												"src": "2047:170:1"
											},
											{
												"body": {
													"nativeSrc": "2369:220:1",
													"nodeType": "YulBlock",
													"src": "2369:220:1",
													"statements": [
														{
															"nativeSrc": "2379:74:1",
															"nodeType": "YulAssignment",
															"src": "2379:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2445:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2445:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2450:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2450:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2386:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2386:58:1"
																},
																"nativeSrc": "2386:67:1",
																"nodeType": "YulFunctionCall",
																"src": "2386:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2379:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2379:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2551:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2551:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9dfe7da6fa76d39e991829d75760d7bd0a7523541cc979a3e9e59716227ab962",
																	"nativeSrc": "2462:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "2462:88:1"
																},
																"nativeSrc": "2462:93:1",
																"nodeType": "YulFunctionCall",
																"src": "2462:93:1"
															},
															"nativeSrc": "2462:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "2462:93:1"
														},
														{
															"nativeSrc": "2564:19:1",
															"nodeType": "YulAssignment",
															"src": "2564:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2575:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2575:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2580:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2580:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2571:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2571:3:1"
																},
																"nativeSrc": "2571:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2571:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2564:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2564:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9dfe7da6fa76d39e991829d75760d7bd0a7523541cc979a3e9e59716227ab962_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2223:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2357:3:1",
														"nodeType": "YulTypedName",
														"src": "2357:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2365:3:1",
														"nodeType": "YulTypedName",
														"src": "2365:3:1",
														"type": ""
													}
												],
												"src": "2223:366:1"
											},
											{
												"body": {
													"nativeSrc": "2766:248:1",
													"nodeType": "YulBlock",
													"src": "2766:248:1",
													"statements": [
														{
															"nativeSrc": "2776:26:1",
															"nodeType": "YulAssignment",
															"src": "2776:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2788:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2788:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2799:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2799:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2784:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2784:3:1"
																},
																"nativeSrc": "2784:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2784:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2776:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2776:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2823:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2823:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2834:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2834:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2819:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2819:3:1"
																		},
																		"nativeSrc": "2819:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2819:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2842:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2842:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2848:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2848:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2838:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2838:3:1"
																		},
																		"nativeSrc": "2838:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2838:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2812:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:1"
																},
																"nativeSrc": "2812:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2812:47:1"
															},
															"nativeSrc": "2812:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2812:47:1"
														},
														{
															"nativeSrc": "2868:139:1",
															"nodeType": "YulAssignment",
															"src": "2868:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3002:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3002:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9dfe7da6fa76d39e991829d75760d7bd0a7523541cc979a3e9e59716227ab962_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2876:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "2876:124:1"
																},
																"nativeSrc": "2876:131:1",
																"nodeType": "YulFunctionCall",
																"src": "2876:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2868:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2868:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9dfe7da6fa76d39e991829d75760d7bd0a7523541cc979a3e9e59716227ab962__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2595:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2746:9:1",
														"nodeType": "YulTypedName",
														"src": "2746:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2761:4:1",
														"nodeType": "YulTypedName",
														"src": "2761:4:1",
														"type": ""
													}
												],
												"src": "2595:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9dfe7da6fa76d39e991829d75760d7bd0a7523541cc979a3e9e59716227ab962(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_9dfe7da6fa76d39e991829d75760d7bd0a7523541cc979a3e9e59716227ab962_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_9dfe7da6fa76d39e991829d75760d7bd0a7523541cc979a3e9e59716227ab962(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9dfe7da6fa76d39e991829d75760d7bd0a7523541cc979a3e9e59716227ab962__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9dfe7da6fa76d39e991829d75760d7bd0a7523541cc979a3e9e59716227ab962_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610028575f3560e01c806358d02b091461002c578063f0acd7d514610056575b5f80fd5b348015610037575f80fd5b50610040610060565b60405161004d9190610161565b60405180910390f35b61005e610065565b005b5f5481565b678ac7230489e800003414610078575f80fd5b5f544203610084575f80fd5b425f819055505f600f4261009891906101a7565b03610147575f3373ffffffffffffffffffffffffffffffffffffffff16476040516100c290610204565b5f6040518083038185875af1925050503d805f81146100fc576040519150601f19603f3d011682016040523d82523d5f602084013e610101565b606091505b5050905080610145576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013c90610272565b60405180910390fd5b505b565b5f819050919050565b61015b81610149565b82525050565b5f6020820190506101745f830184610152565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6101b182610149565b91506101bc83610149565b9250826101cc576101cb61017a565b5b828206905092915050565b5f81905092915050565b50565b5f6101ef5f836101d7565b91506101fa826101e1565b5f82019050919050565b5f61020e826101e4565b9150819050919050565b5f82825260208201905092915050565b7f4661696c656420746f2073656e642065746865720000000000000000000000005f82015250565b5f61025c601483610218565b915061026782610228565b602082019050919050565b5f6020820190508181035f83015261028981610250565b905091905056fea26469706673582212200d07d6274745762065e4429f1dfe1b947b36ed5db2336005e293060b8d368cb964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x58D02B09 EQ PUSH2 0x2C JUMPI DUP1 PUSH4 0xF0ACD7D5 EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x65 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH8 0x8AC7230489E80000 CALLVALUE EQ PUSH2 0x78 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SLOAD TIMESTAMP SUB PUSH2 0x84 JUMPI PUSH0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xF TIMESTAMP PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST SUB PUSH2 0x147 JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xC2 SWAP1 PUSH2 0x204 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x101 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x145 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C SWAP1 PUSH2 0x272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B DUP2 PUSH2 0x149 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x174 PUSH0 DUP4 ADD DUP5 PUSH2 0x152 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B1 DUP3 PUSH2 0x149 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC DUP4 PUSH2 0x149 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1CC JUMPI PUSH2 0x1CB PUSH2 0x17A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF PUSH0 DUP4 PUSH2 0x1D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA DUP3 PUSH2 0x1E1 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20E DUP3 PUSH2 0x1E4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64206574686572000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25C PUSH1 0x14 DUP4 PUSH2 0x218 JUMP JUMPDEST SWAP2 POP PUSH2 0x267 DUP3 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x289 DUP2 PUSH2 0x250 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SMOD 0xD6 0x27 SELFBALANCE GASLIMIT PUSH23 0x2065E4429F1DFE1B947B36ED5DB2336005E293060B8D36 DUP13 0xB9 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "800:522:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;825:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;894:425;;;:::i;:::-;;825:28;;;;:::o;894:425::-;959:8;946:9;:21;938:30;;;;;;1036:13;;1017:15;:32;1009:41;;;;;;1111:15;1095:13;:31;;;;1166:1;1160:2;1142:15;:20;;;;:::i;:::-;:25;1139:173;;1185:9;1199:10;:15;;1222:21;1199:49;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1184:64;;;1271:4;1263:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;1169:143;1139:173;894:425::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15;628:176;660:1;677:20;695:1;677:20;:::i;:::-;672:25;;711:20;729:1;711:20;:::i;:::-;706:25;;750:1;740:35;;755:18;;:::i;:::-;740:35;796:1;793;789:9;784:14;;628:176;;;;:::o;810:147::-;911:11;948:3;933:18;;810:147;;;;:::o;963:114::-;;:::o;1083:398::-;1242:3;1263:83;1344:1;1339:3;1263:83;:::i;:::-;1256:90;;1355:93;1444:3;1355:93;:::i;:::-;1473:1;1468:3;1464:11;1457:18;;1083:398;;;:::o;1487:379::-;1671:3;1693:147;1836:3;1693:147;:::i;:::-;1686:154;;1857:3;1850:10;;1487:379;;;:::o;1872:169::-;1956:11;1990:6;1985:3;1978:19;2030:4;2025:3;2021:14;2006:29;;1872:169;;;;:::o;2047:170::-;2187:22;2183:1;2175:6;2171:14;2164:46;2047:170;:::o;2223:366::-;2365:3;2386:67;2450:2;2445:3;2386:67;:::i;:::-;2379:74;;2462:93;2551:3;2462:93;:::i;:::-;2580:2;2575:3;2571:12;2564:19;;2223:366;;;:::o;2595:419::-;2761:4;2799:2;2788:9;2784:18;2776:26;;2848:9;2842:4;2838:20;2834:1;2823:9;2819:17;2812:47;2876:131;3002:4;2876:131;:::i;:::-;2868:139;;2595:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "142000",
								"executionCost": "164",
								"totalCost": "142164"
							},
							"external": {
								"pastBlockTime()": "2402",
								"spin()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 800,
									"end": 1322,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 800,
									"end": 1322,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 800,
									"end": 1322,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 800,
									"end": 1322,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 800,
									"end": 1322,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 800,
									"end": 1322,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 800,
									"end": 1322,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 1322,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 800,
									"end": 1322,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 1322,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d07d6274745762065e4429f1dfe1b947b36ed5db2336005e293060b8d368cb964736f6c634300081a0033",
									".code": [
										{
											"begin": 800,
											"end": 1322,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "PUSH",
											"source": 0,
											"value": "58D02B09"
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "PUSH",
											"source": 0,
											"value": "F0ACD7D5"
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1322,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 825,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 825,
											"end": 853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 825,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 825,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 825,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 825,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 825,
											"end": 853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 825,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 825,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1319,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 894,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 894,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 894,
											"end": 1319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1319,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 894,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1319,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 825,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 853,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 825,
											"end": 853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1319,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 894,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 959,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 946,
											"end": 955,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 946,
											"end": 967,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 938,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 938,
											"end": 968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 938,
											"end": 968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 938,
											"end": 968,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 938,
											"end": 968,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 938,
											"end": 968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1049,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1032,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1049,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1009,
											"end": 1050,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1050,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1050,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1009,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1126,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 1142,
											"end": 1157,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1142,
											"end": 1162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1142,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1162,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1142,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1167,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1139,
											"end": 1312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1209,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1199,
											"end": 1214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1243,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1199,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1263,
											"end": 1300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1312,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1139,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 622,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 587,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 608,
											"end": 609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 616,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 804,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 695,
											"end": 696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 677,
											"end": 697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 677,
											"end": 697,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 672,
											"end": 697,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 672,
											"end": 697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 729,
											"end": 730,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 711,
											"end": 731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 706,
											"end": 731,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 706,
											"end": 731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 750,
											"end": 751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 740,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 740,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 755,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 755,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 755,
											"end": 773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 755,
											"end": 773,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 755,
											"end": 773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 740,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 740,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 796,
											"end": 797,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 793,
											"end": 794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 789,
											"end": 798,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 784,
											"end": 798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 784,
											"end": 798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 804,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 628,
											"end": 804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 628,
											"end": 804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 810,
											"end": 957,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 810,
											"end": 957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 911,
											"end": 922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 933,
											"end": 951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 933,
											"end": 951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 810,
											"end": 957,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 810,
											"end": 957,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 810,
											"end": 957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 810,
											"end": 957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 810,
											"end": 957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 963,
											"end": 1077,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 963,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 963,
											"end": 1077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 963,
											"end": 1077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1481,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1083,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1342,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1263,
											"end": 1346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1263,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1444,
											"end": 1447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1355,
											"end": 1448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1448,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1355,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1487,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1836,
											"end": 1839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1693,
											"end": 1840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1840,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1693,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1857,
											"end": 1860,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1850,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1850,
											"end": 1860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 2041,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1872,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 1988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 1997,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2028,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 2041,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 2041,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 2041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 2041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 2041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2217,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2047,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "4661696C656420746F2073656E64206574686572000000000000000000000000"
										},
										{
											"begin": 2183,
											"end": 2184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2589,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2223,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2450,
											"end": 2452,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2445,
											"end": 2448,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2386,
											"end": 2453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2453,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2386,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2379,
											"end": 2453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2379,
											"end": 2453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2551,
											"end": 2554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2462,
											"end": 2555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2555,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2462,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2582,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2575,
											"end": 2578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2571,
											"end": 2583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2589,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 3014,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2595,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2801,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2788,
											"end": 2797,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2858,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2832,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3002,
											"end": 3006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2876,
											"end": 3007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 3007,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2876,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2868,
											"end": 3007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2868,
											"end": 3007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 3014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 3014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 3014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 3014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Hacks/BlockTimestampManipulation.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"pastBlockTime()": "58d02b09",
							"spin()": "f0acd7d5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"pastBlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spin\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Hacks/BlockTimestampManipulation.sol\":\"Roulette\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Hacks/BlockTimestampManipulation.sol\":{\"keccak256\":\"0x763dcc9052bb1ba15f56b64438154b2b4e42f6ed62fec5ac9da88aa47b7535f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ce059a7434ed24753bd69be3606d8cb44424a04a48bab3c4ecc91d8ef5350c1\",\"dweb:/ipfs/QmaEAVWuiCaZoTJzwpogyPCh4qAKLNYCjkj9F2SF3ty9B4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "Hacks/BlockTimestampManipulation.sol:Roulette",
								"label": "pastBlockTime",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Hacks/BlockTimestampManipulation.sol": {
				"ast": {
					"absolutePath": "Hacks/BlockTimestampManipulation.sol",
					"exportedSymbols": {
						"Roulette": [
							58
						]
					},
					"id": 59,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "236:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Roulette",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 58,
							"linearizedBaseContracts": [
								58
							],
							"name": "Roulette",
							"nameLocation": "809:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "58d02b09",
									"id": 3,
									"mutability": "mutable",
									"name": "pastBlockTime",
									"nameLocation": "840:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 58,
									"src": "825:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "825:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 6,
										"nodeType": "Block",
										"src": "884:2:0",
										"statements": []
									},
									"id": 7,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "873:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:0:0"
									},
									"scope": 58,
									"src": "862:24:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "927:392:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 11,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "946:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 12,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "950:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "946:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3130",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "959:8:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																},
																"value": "10"
															},
															"src": "946:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 10,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "938:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "938:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 18,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1017:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1023:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1017:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 20,
																"name": "pastBlockTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "1036:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1017:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1009:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1009:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "1009:41:0"
											},
											{
												"expression": {
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 24,
														"name": "pastBlockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1095:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 25,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1111:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1117:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1111:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1095:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1095:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 29,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1142:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1148:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1142:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "3135",
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1160:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15_by_1",
																"typeString": "int_const 15"
															},
															"value": "15"
														},
														"src": "1142:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1166:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1142:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 55,
												"nodeType": "IfStatement",
												"src": "1139:173:0",
												"trueBody": {
													"id": 54,
													"nodeType": "Block",
													"src": "1169:143:0",
													"statements": [
														{
															"assignments": [
																36,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 36,
																	"mutability": "mutable",
																	"name": "sent",
																	"nameLocation": "1190:4:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 54,
																	"src": "1185:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 35,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1185:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 48,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 46,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1245:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 37,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1199:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1203:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1199:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 39,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1210:4:0",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "1199:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 45,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"id": 42,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "1230:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_Roulette_$58",
																							"typeString": "contract Roulette"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_Roulette_$58",
																							"typeString": "contract Roulette"
																						}
																					],
																					"id": 41,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1222:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 40,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "1222:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 43,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1222:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 44,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1236:7:0",
																			"memberName": "balance",
																			"nodeType": "MemberAccess",
																			"src": "1222:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "1199:45:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1199:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1184:64:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 50,
																		"name": "sent",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "1271:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e64206574686572",
																		"id": 51,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1277:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9dfe7da6fa76d39e991829d75760d7bd0a7523541cc979a3e9e59716227ab962",
																			"typeString": "literal_string \"Failed to send ether\""
																		},
																		"value": "Failed to send ether"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9dfe7da6fa76d39e991829d75760d7bd0a7523541cc979a3e9e59716227ab962",
																			"typeString": "literal_string \"Failed to send ether\""
																		}
																	],
																	"id": 49,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1263:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1263:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 53,
															"nodeType": "ExpressionStatement",
															"src": "1263:37:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "f0acd7d5",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "spin",
									"nameLocation": "903:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "907:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "927:0:0"
									},
									"scope": 58,
									"src": "894:425:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 59,
							"src": "800:522:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "236:1188:0"
				},
				"id": 0
			}
		}
	}
}