{
	"id": "4cfdfd7c7788faef034587ce44e067a3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"AssemblyLoop.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\n\r\ncontract AssemblyLoop {\r\n    function yul_for_loop() public pure returns (uint256 z) {\r\n        assembly {\r\n            for { let i := 0 } lt(i, 10) { i := add(i, 1) } { z := add(z, 1) }\r\n        }\r\n    }\r\n\r\n    function yul_white_loop() public pure returns (uint256 z) {\r\n        assembly {\r\n            let i := 0\r\n            for {} lt(i, 5) {} {\r\n                i := add(i, 1)\r\n                z := add(z, 1)\r\n            }\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"AssemblyLoop.sol": {
				"AssemblyLoop": {
					"abi": [
						{
							"inputs": [],
							"name": "yul_for_loop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "z",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "yul_white_loop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "z",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AssemblyLoop.sol\":61:510  contract AssemblyLoop {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"AssemblyLoop.sol\":61:510  contract AssemblyLoop {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1f377a29\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd22b5850\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"AssemblyLoop.sol\":273:507  function yul_white_loop() public pure returns (uint256 z) {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AssemblyLoop.sol\":90:265  function yul_for_loop() public pure returns (uint256 z) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AssemblyLoop.sol\":273:507  function yul_white_loop() public pure returns (uint256 z) {... */\n    tag_6:\n        /* \"AssemblyLoop.sol\":320:329  uint256 z */\n      0x00\n        /* \"AssemblyLoop.sol\":375:376  0 */\n      dup1\n        /* \"AssemblyLoop.sol\":390:489  for {} lt(i, 5) {} {... */\n    tag_13:\n        /* \"AssemblyLoop.sol\":403:404  5 */\n      0x05\n        /* \"AssemblyLoop.sol\":400:401  i */\n      dup2\n        /* \"AssemblyLoop.sol\":397:405  lt(i, 5) */\n      lt\n        /* \"AssemblyLoop.sol\":390:489  for {} lt(i, 5) {} {... */\n      iszero\n      tag_15\n      jumpi\n        /* \"AssemblyLoop.sol\":440:441  1 */\n      0x01\n        /* \"AssemblyLoop.sol\":437:438  i */\n      dup2\n        /* \"AssemblyLoop.sol\":433:442  add(i, 1) */\n      add\n        /* \"AssemblyLoop.sol\":428:442  i := add(i, 1) */\n      swap1\n      pop\n        /* \"AssemblyLoop.sol\":472:473  1 */\n      0x01\n        /* \"AssemblyLoop.sol\":469:470  z */\n      dup3\n        /* \"AssemblyLoop.sol\":465:474  add(z, 1) */\n      add\n        /* \"AssemblyLoop.sol\":460:474  z := add(z, 1) */\n      swap2\n      pop\n        /* \"AssemblyLoop.sol\":390:489  for {} lt(i, 5) {} {... */\n      jump(tag_13)\n    tag_15:\n        /* \"AssemblyLoop.sol\":351:500  {... */\n      pop\n        /* \"AssemblyLoop.sol\":273:507  function yul_white_loop() public pure returns (uint256 z) {... */\n      swap1\n      jump\t// out\n        /* \"AssemblyLoop.sol\":90:265  function yul_for_loop() public pure returns (uint256 z) {... */\n    tag_10:\n        /* \"AssemblyLoop.sol\":135:144  uint256 z */\n      0x00\n        /* \"AssemblyLoop.sol\":196:197  0 */\n      dup1\n        /* \"AssemblyLoop.sol\":181:247  for { let i := 0 } lt(i, 10) { i := add(i, 1) } { z := add(z, 1) } */\n    tag_17:\n        /* \"AssemblyLoop.sol\":206:208  10 */\n      0x0a\n        /* \"AssemblyLoop.sol\":203:204  i */\n      dup2\n        /* \"AssemblyLoop.sol\":200:209  lt(i, 10) */\n      lt\n        /* \"AssemblyLoop.sol\":181:247  for { let i := 0 } lt(i, 10) { i := add(i, 1) } { z := add(z, 1) } */\n      iszero\n      tag_19\n      jumpi\n        /* \"AssemblyLoop.sol\":243:244  1 */\n      0x01\n        /* \"AssemblyLoop.sol\":240:241  z */\n      dup3\n        /* \"AssemblyLoop.sol\":236:245  add(z, 1) */\n      add\n        /* \"AssemblyLoop.sol\":231:245  z := add(z, 1) */\n      swap2\n      pop\n        /* \"AssemblyLoop.sol\":224:225  1 */\n      0x01\n        /* \"AssemblyLoop.sol\":221:222  i */\n      dup2\n        /* \"AssemblyLoop.sol\":217:226  add(i, 1) */\n      add\n        /* \"AssemblyLoop.sol\":212:226  i := add(i, 1) */\n      swap1\n      pop\n        /* \"AssemblyLoop.sol\":181:247  for { let i := 0 } lt(i, 10) { i := add(i, 1) } { z := add(z, 1) } */\n      jump(tag_17)\n    tag_19:\n        /* \"AssemblyLoop.sol\":185:199  { let i := 0 } */\n      pop\n        /* \"AssemblyLoop.sol\":90:265  function yul_for_loop() public pure returns (uint256 z) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_20:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_21:\n        /* \"#utility.yul\":177:201   */\n      tag_25\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_20\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_8:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_27\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_21\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122097624fce1bc8567ff08d3c0e56fc402504bf8cea9326326d6235cbdd5ab4021264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101098061001c5f395ff3fe6080604052348015600e575f80fd5b50600436106030575f3560e01c80631f377a29146034578063d22b585014604e575b5f80fd5b603a6068565b6040516045919060bc565b60405180910390f35b60546087565b604051605f919060bc565b60405180910390f35b5f805b6005811015608357600181019050600182019150606b565b5090565b5f805b600a81101560a257600182019150600181019050608a565b5090565b5f819050919050565b60b68160a6565b82525050565b5f60208201905060cd5f83018460af565b9291505056fea264697066735822122097624fce1bc8567ff08d3c0e56fc402504bf8cea9326326d6235cbdd5ab4021264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F377A29 EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0xD22B5850 EQ PUSH1 0x4E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3A PUSH1 0x68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x45 SWAP2 SWAP1 PUSH1 0xBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x54 PUSH1 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x5F SWAP2 SWAP1 PUSH1 0xBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH1 0x83 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x6B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH1 0xA2 JUMPI PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH1 0x8A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB6 DUP2 PUSH1 0xA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xCD PUSH0 DUP4 ADD DUP5 PUSH1 0xAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 PUSH3 0x4FCE1B 0xC8 JUMP PUSH32 0xF08D3C0E56FC402504BF8CEA9326326D6235CBDD5AB4021264736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "61:449:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@yul_for_loop_8": {
									"entryPoint": 135,
									"id": 8,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@yul_white_loop_15": {
									"entryPoint": 104,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:439:1",
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106030575f3560e01c80631f377a29146034578063d22b585014604e575b5f80fd5b603a6068565b6040516045919060bc565b60405180910390f35b60546087565b604051605f919060bc565b60405180910390f35b5f805b6005811015608357600181019050600182019150606b565b5090565b5f805b600a81101560a257600182019150600181019050608a565b5090565b5f819050919050565b60b68160a6565b82525050565b5f60208201905060cd5f83018460af565b9291505056fea264697066735822122097624fce1bc8567ff08d3c0e56fc402504bf8cea9326326d6235cbdd5ab4021264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F377A29 EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0xD22B5850 EQ PUSH1 0x4E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3A PUSH1 0x68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x45 SWAP2 SWAP1 PUSH1 0xBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x54 PUSH1 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x5F SWAP2 SWAP1 PUSH1 0xBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH1 0x83 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x6B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH1 0xA2 JUMPI PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH1 0x8A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB6 DUP2 PUSH1 0xA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xCD PUSH0 DUP4 ADD DUP5 PUSH1 0xAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 PUSH3 0x4FCE1B 0xC8 JUMP PUSH32 0xF08D3C0E56FC402504BF8CEA9326326D6235CBDD5AB4021264736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "61:449:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;273:234;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;90:175;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;273:234;320:9;375:1;390:99;403:1;400;397:8;390:99;;;440:1;437;433:9;428:14;;472:1;469;465:9;460:14;;390:99;;;351:149;273:234;:::o;90:175::-;135:9;196:1;181:66;206:2;203:1;200:9;181:66;;;243:1;240;236:9;231:14;;224:1;221;217:9;212:14;;181:66;;;185:14;90:175;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "53000",
								"executionCost": "103",
								"totalCost": "53103"
							},
							"external": {
								"yul_for_loop()": "infinite",
								"yul_white_loop()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 510,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 510,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 510,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 510,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 510,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 510,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 61,
									"end": 510,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 510,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61,
									"end": 510,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 510,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 510,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 61,
									"end": 510,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 510,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 510,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61,
									"end": 510,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 510,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 510,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 510,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 510,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 510,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 510,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122097624fce1bc8567ff08d3c0e56fc402504bf8cea9326326d6235cbdd5ab4021264736f6c634300081a0033",
									".code": [
										{
											"begin": 61,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 510,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 510,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 510,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "1F377A29"
										},
										{
											"begin": 61,
											"end": 510,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "D22B5850"
										},
										{
											"begin": 61,
											"end": 510,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 510,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 273,
											"end": 507,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 273,
											"end": 507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 273,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 273,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 273,
											"end": 507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 507,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 273,
											"end": 507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 273,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 273,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 273,
											"end": 507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 273,
											"end": 507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 273,
											"end": 507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 507,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 273,
											"end": 507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 273,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 273,
											"end": 507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 273,
											"end": 507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 273,
											"end": 507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 507,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 90,
											"end": 265,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 90,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 90,
											"end": 265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 265,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 90,
											"end": 265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 90,
											"end": 265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 90,
											"end": 265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 265,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 90,
											"end": 265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 265,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 90,
											"end": 265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 265,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 273,
											"end": 507,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 273,
											"end": 507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 320,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 390,
											"end": 489,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 390,
											"end": 489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 403,
											"end": 404,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 400,
											"end": 401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 397,
											"end": 405,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 390,
											"end": 489,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 390,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 390,
											"end": 489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 440,
											"end": 441,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 437,
											"end": 438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 433,
											"end": 442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 428,
											"end": 442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 428,
											"end": 442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 473,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 469,
											"end": 470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 465,
											"end": 474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 460,
											"end": 474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 460,
											"end": 474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 390,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 390,
											"end": 489,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 390,
											"end": 489,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 390,
											"end": 489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 351,
											"end": 500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 265,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 90,
											"end": 265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 135,
											"end": 144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 196,
											"end": 197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 181,
											"end": 247,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 181,
											"end": 247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 206,
											"end": 208,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 203,
											"end": 204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 209,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 181,
											"end": 247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 181,
											"end": 247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 181,
											"end": 247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 243,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 240,
											"end": 241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 236,
											"end": 245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 231,
											"end": 245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 231,
											"end": 245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 221,
											"end": 222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 217,
											"end": 226,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 212,
											"end": 226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 226,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 181,
											"end": 247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 181,
											"end": 247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 181,
											"end": 247,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 181,
											"end": 247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 185,
											"end": 199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"AssemblyLoop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"yul_for_loop()": "d22b5850",
							"yul_white_loop()": "1f377a29"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"yul_for_loop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yul_white_loop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AssemblyLoop.sol\":\"AssemblyLoop\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"AssemblyLoop.sol\":{\"keccak256\":\"0x698838fd43744f10e36f2e621f25446bc87e7745d93090b8e49b02f9b4a18751\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c070c7aa8c50380fb63a8738edc7e63def5c3cadd85a15bfeb29c280c45f7daf\",\"dweb:/ipfs/QmciY7WTPgSjsnodcN4GNNPYk1DvrjxwxvsYDdfGobNwHK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"AssemblyLoop.sol": {
				"ast": {
					"absolutePath": "AssemblyLoop.sol",
					"exportedSymbols": {
						"AssemblyLoop": [
							16
						]
					},
					"id": 17,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AssemblyLoop",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 16,
							"linearizedBaseContracts": [
								16
							],
							"name": "AssemblyLoop",
							"nameLocation": "70:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 7,
										"nodeType": "Block",
										"src": "146:119:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "166:92:0",
													"nodeType": "YulBlock",
													"src": "166:92:0",
													"statements": [
														{
															"body": {
																"nativeSrc": "229:18:0",
																"nodeType": "YulBlock",
																"src": "229:18:0",
																"statements": [
																	{
																		"nativeSrc": "231:14:0",
																		"nodeType": "YulAssignment",
																		"src": "231:14:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "z",
																					"nativeSrc": "240:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "240:1:0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "243:1:0",
																					"nodeType": "YulLiteral",
																					"src": "243:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "236:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "236:3:0"
																			},
																			"nativeSrc": "236:9:0",
																			"nodeType": "YulFunctionCall",
																			"src": "236:9:0"
																		},
																		"variableNames": [
																			{
																				"name": "z",
																				"nativeSrc": "231:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "231:1:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "203:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "203:1:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "206:2:0",
																		"nodeType": "YulLiteral",
																		"src": "206:2:0",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "200:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "200:2:0"
																},
																"nativeSrc": "200:9:0",
																"nodeType": "YulFunctionCall",
																"src": "200:9:0"
															},
															"nativeSrc": "181:66:0",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "210:18:0",
																"nodeType": "YulBlock",
																"src": "210:18:0",
																"statements": [
																	{
																		"nativeSrc": "212:14:0",
																		"nodeType": "YulAssignment",
																		"src": "212:14:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "221:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "221:1:0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "224:1:0",
																					"nodeType": "YulLiteral",
																					"src": "224:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "217:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "217:3:0"
																			},
																			"nativeSrc": "217:9:0",
																			"nodeType": "YulFunctionCall",
																			"src": "217:9:0"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "212:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "212:1:0"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "185:14:0",
																"nodeType": "YulBlock",
																"src": "185:14:0",
																"statements": [
																	{
																		"nativeSrc": "187:10:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "187:10:0",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "196:1:0",
																			"nodeType": "YulLiteral",
																			"src": "196:1:0",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "191:1:0",
																				"nodeType": "YulTypedName",
																				"src": "191:1:0",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "181:66:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4,
														"isOffset": false,
														"isSlot": false,
														"src": "231:1:0",
														"valueSize": 1
													},
													{
														"declaration": 4,
														"isOffset": false,
														"isSlot": false,
														"src": "240:1:0",
														"valueSize": 1
													}
												],
												"id": 6,
												"nodeType": "InlineAssembly",
												"src": "157:101:0"
											}
										]
									},
									"functionSelector": "d22b5850",
									"id": 8,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "yul_for_loop",
									"nameLocation": "99:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:11:0"
									},
									"scope": 16,
									"src": "90:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "331:176:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "351:149:0",
													"nodeType": "YulBlock",
													"src": "351:149:0",
													"statements": [
														{
															"nativeSrc": "366:10:0",
															"nodeType": "YulVariableDeclaration",
															"src": "366:10:0",
															"value": {
																"kind": "number",
																"nativeSrc": "375:1:0",
																"nodeType": "YulLiteral",
																"src": "375:1:0",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "370:1:0",
																	"nodeType": "YulTypedName",
																	"src": "370:1:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "409:80:0",
																"nodeType": "YulBlock",
																"src": "409:80:0",
																"statements": [
																	{
																		"nativeSrc": "428:14:0",
																		"nodeType": "YulAssignment",
																		"src": "428:14:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "437:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "437:1:0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "440:1:0",
																					"nodeType": "YulLiteral",
																					"src": "440:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "433:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "433:3:0"
																			},
																			"nativeSrc": "433:9:0",
																			"nodeType": "YulFunctionCall",
																			"src": "433:9:0"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "428:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "428:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "460:14:0",
																		"nodeType": "YulAssignment",
																		"src": "460:14:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "z",
																					"nativeSrc": "469:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "469:1:0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "472:1:0",
																					"nodeType": "YulLiteral",
																					"src": "472:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "465:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "465:3:0"
																			},
																			"nativeSrc": "465:9:0",
																			"nodeType": "YulFunctionCall",
																			"src": "465:9:0"
																		},
																		"variableNames": [
																			{
																				"name": "z",
																				"nativeSrc": "460:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "460:1:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "400:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "400:1:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "403:1:0",
																		"nodeType": "YulLiteral",
																		"src": "403:1:0",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "397:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "397:2:0"
																},
																"nativeSrc": "397:8:0",
																"nodeType": "YulFunctionCall",
																"src": "397:8:0"
															},
															"nativeSrc": "390:99:0",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "406:2:0",
																"nodeType": "YulBlock",
																"src": "406:2:0",
																"statements": []
															},
															"pre": {
																"nativeSrc": "394:2:0",
																"nodeType": "YulBlock",
																"src": "394:2:0",
																"statements": []
															},
															"src": "390:99:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "460:1:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "469:1:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "342:158:0"
											}
										]
									},
									"functionSelector": "1f377a29",
									"id": 15,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "yul_white_loop",
									"nameLocation": "282:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "328:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "320:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:11:0"
									},
									"scope": 16,
									"src": "273:234:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 17,
							"src": "61:449:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:477:0"
				},
				"id": 0
			}
		}
	}
}